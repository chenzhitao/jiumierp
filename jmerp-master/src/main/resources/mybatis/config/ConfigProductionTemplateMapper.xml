<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.config.configProductionTemplate.mapper.ConfigProductionTemplateMapper">
    
    <resultMap type="ConfigProductionTemplate" id="ConfigProductionTemplateResult">
        <result property="id"    column="id"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
        <result property="status"    column="status"    />
        <result property="templateName"    column="template_name"    />
        <result property="requirements"    column="requirements"    />

        <result property="processArr"    column="process_arr"    />
        <result property="materialsArr"    column="materials_arr"    />
    </resultMap>

    <sql id="selectConfigProductionTemplateVo">
        select
            (select group_concat(p.process_name) from config_production_template_process qt left join config_process p on p.id = qt.process_id where qt.production_template_id = p.id) process_arr,
            (select group_concat(m.materials_name) from config_production_template_materials qt left join config_materials m on m.id = qt.process_id where qt.production_template_id = p.id) materials_arr,
            p.id, p.create_by, p.create_time, p.update_by, p.update_time, p.remark, p.status, p.template_name, p.requirements
        from config_production_template p
    </sql>

    <select id="selectConfigProductionTemplateList" parameterType="ConfigProductionTemplate" resultMap="ConfigProductionTemplateResult">
        <include refid="selectConfigProductionTemplateVo"/>
        <where>  
            <if test="status != null  and status != ''"> and p.status = #{status}</if>
            <if test="templateName != null  and templateName != ''"> and p.template_name like concat('%', #{templateName}, '%')</if>
        </where>
    </select>
    
    <select id="selectConfigProductionTemplateById" parameterType="Long" resultMap="ConfigProductionTemplateResult">
        <include refid="selectConfigProductionTemplateVo"/>
        where p.id = #{id}
    </select>
        
    <insert id="insertConfigProductionTemplate" parameterType="ConfigProductionTemplate" useGeneratedKeys="true" keyProperty="id">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into config_production_template
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
            <if test="status != null">status,</if>
            <if test="templateName != null and templateName != ''">template_name,</if>
            <if test="requirements != null">requirements,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
            <if test="status != null">#{status},</if>
            <if test="templateName != null and templateName != ''">#{templateName},</if>
            <if test="requirements != null">#{requirements},</if>
         </trim>
    </insert>

    <update id="updateConfigProductionTemplate" parameterType="ConfigProductionTemplate">
        update config_production_template
        <trim prefix="SET" suffixOverrides=",">
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="status != null">status = #{status},</if>
            <if test="templateName != null and templateName != ''">template_name = #{templateName},</if>
            <if test="requirements != null">requirements = #{requirements},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteConfigProductionTemplateById" parameterType="Long">
        delete from config_production_template where id = #{id}
    </delete>

    <delete id="deleteConfigProductionTemplateProcessById" parameterType="Long">
        delete from config_production_template_process where production_template_id = #{id}
    </delete>

    <delete id="deleteConfigProductionTemplateMaterialsById" parameterType="Long">
        delete from config_production_template_materials where production_template_id = #{id}
    </delete>

    <delete id="deleteConfigProductionTemplateByIds" parameterType="String">
        delete from config_production_template where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteConfigProductionTemplateProcessByIds" parameterType="String">
        delete from config_production_template_process where production_template_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteConfigProductionTemplateMaterialsByIds" parameterType="String">
        delete from config_production_template_materials where production_template_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>